import java.util.Scanner;
import java.util.Arrays;

public class SelectionSortDynamic {
    public static void selectionSort(int[] arr) {
        int n = arr.length;

        for (int i = 0; i < n - 1; i++) {
            int minIdx = i;
            for (int j = i + 1; j < n; j++) {
                if (arr[j] < arr[minIdx]) {
                    minIdx = j;
                }
            }
            // Swap the found minimum with the current element
            int temp = arr[minIdx];
            arr[minIdx] = arr[i];
            arr[i] = temp;
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter number of elements: ");
        int n = sc.nextInt();

        int[] arr = new int[n]; // dynamically initialized array
        System.out.println("Enter " + n + " elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        System.out.println("Original array: " + Arrays.toString(arr));
        selectionSort(arr);
        System.out.println("Sorted array (Ascending): " + Arrays.toString(arr));
    }
}







import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class BinarySearchFromFile {

    // Function to perform Binary Search
    public static int binarySearch(int[] arr, int key) {
        int low = 0, high = arr.length - 1;

        while (low <= high) {
            int mid = (low + high) / 2;

            if (arr[mid] == key)
                return mid; // Best case: O(1)
            else if (arr[mid] < key)
                low = mid + 1;
            else
                high = mid - 1;
        }

        return -1; // Not found
    }

    public static void main(String[] args) {
        try {
            // Reading numbers from file
            File file = new File("numbers.txt");
            Scanner fileScanner = new Scanner(file);
            int[] temp = new int[100]; // temporary array
            int count = 0;

            while (fileScanner.hasNextInt()) {
                temp[count++] = fileScanner.nextInt();
            }

            int[] arr = new int[count];
            System.arraycopy(temp, 0, arr, 0, count);

            // Input key to search
            Scanner sc = new Scanner(System.in);
            System.out.print("Enter number to search: ");
            int key = sc.nextInt();

            // Perform binary search
            int index = binarySearch(arr, key);

            if (index != -1)
                System.out.println("Element found at index: " + index);
            else
                System.out.println("Element not found.");

        } catch (FileNotFoundException e) {
            System.out.println("File not found.");
        }
    }
}
